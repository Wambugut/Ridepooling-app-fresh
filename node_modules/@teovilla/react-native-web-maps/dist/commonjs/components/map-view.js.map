{"version":3,"names":["_api","require","_react","_interopRequireWildcard","_mouseEvent","_camera","_log","_useUserLocation","_userLocationMarker","Location","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_MapView","props","ref","map","setMap","useState","isGesture","setIsGesture","userLocation","useUserLocation","showUserLocation","showsUserLocation","requestPermission","onUserLocationChange","followUserLocation","followsUserLocation","isLoaded","useJsApiLoader","googleMapsApiKey","_onMapReady","useCallback","_map","_props$onMapReady","onMapReady","_onDragStart","_onRegionChange","bounds","getBounds","_props$onRegionChange","northEast","getNorthEast","southWest","getSouthWest","longitudeDelta","Math","abs","lng","latitudeDelta","lat","center","getCenter","onRegionChange","latitude","longitude","_onRegionChangeComplete","_props$onRegionChange2","onRegionChangeComplete","useImperativeHandle","getCamera","altitude","heading","getHeading","pitch","getTilt","zoom","getZoom","setCamera","camera","moveCamera","transformRNCameraObject","animateCamera","_opts","getMapBoundaries","animateToRegion","region","_duration","google","maps","LatLngBounds","extend","fitBounds","fitToCoordinates","coordinates","options","forEach","c","edgePadding","setMapBoundaries","pointForCoordinate","coordinate","_map$getProjection","point","getProjection","fromLatLngToPoint","x","y","coordinateForPoint","_map$getProjection2","coord","fromPointToLatLng","Point","takeSnapshot","_options","logMethodNotImplementedWarning","addressForCoordinate","_coordinate","setGoogleApiKey","address","reverseGeocodeAsync","useGoogleMaps","administrativeArea","country","countryCode","isoCountryCode","locality","city","postalCode","name","subAdministrativeArea","subregion","subLocality","thoroughfare","animateToNavigation","_location","_bearing","_angle","logDeprecationWarning","animateToCoordinate","_latLng","animateToBearing","animateToViewingAngle","fitToElements","fitToSuppliedMarkers","_markers","setIndoorActiveLevelIndex","_index","useEffect","panTo","coords","mapNode","useMemo","_props$initialCamera","_props$initialCamera2","_props$initialCamera3","_props$initialCamera4","_props$initialRegion","_props$initialCamera5","_props$initialRegion2","createElement","GoogleMap","onLoad","onBoundsChanged","onDragStart","onDragEnd","mapContainerStyle","flex","initialCamera","tilt","onDrag","_props$onPanDrag","onPanDrag","mapMouseEventToMapEvent","undefined","onClick","e","_props$onPress","onPress","onDblClick","_props$onDoublePress","onDoublePress","initialRegion","scrollwheel","zoomEnabled","disableDoubleClickZoom","zoomTapEnabled","zoomControl","zoomControlEnabled","rotateControl","rotateEnabled","minZoom","minZoomLevel","maxZoom","maxZoomLevel","scaleControl","showsScale","styles","customMapStyle","UserLocationMarker","children","provider","console","warn","React","cloneElement","Fragment","loadingFallback","MapView","memo","forwardRef","exports"],"sources":["map-view.tsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport type { ForwardedRef } from 'react';\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport type {\n  Address,\n  Camera,\n  EdgePadding,\n  LatLng,\n  MapViewProps,\n  Point,\n  Region,\n  SnapshotOptions,\n} from 'react-native-maps';\nimport type RNMapView from 'react-native-maps';\nimport { mapMouseEventToMapEvent } from '../utils/mouse-event';\nimport { transformRNCameraObject } from '../utils/camera';\nimport {\n  logMethodNotImplementedWarning,\n  logDeprecationWarning,\n} from '../utils/log';\nimport { useUserLocation } from '../hooks/use-user-location';\nimport { UserLocationMarker } from './user-location-marker';\nimport * as Location from 'expo-location';\n\nfunction _MapView(props: MapViewProps, ref: ForwardedRef<Partial<RNMapView>>) {\n  // State\n\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [isGesture, setIsGesture] = useState<boolean>(false);\n\n  const userLocation = useUserLocation({\n    showUserLocation: props.showsUserLocation || false,\n    requestPermission:\n      props.showsUserLocation || !!props.onUserLocationChange || false,\n    onUserLocationChange: props.onUserLocationChange,\n    followUserLocation: props.followsUserLocation || false,\n  });\n\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: props.googleMapsApiKey || '',\n  });\n\n  // Callbacks\n\n  const _onMapReady = useCallback(\n    (_map: google.maps.Map) => {\n      setMap(_map);\n      props.onMapReady?.();\n    },\n    [map, props.onMapReady]\n  );\n\n  const _onDragStart = useCallback(() => {\n    setIsGesture(true);\n  }, []);\n\n  const _onRegionChange = useCallback(() => {\n    const bounds = map?.getBounds();\n    if (bounds) {\n      const northEast = bounds.getNorthEast();\n      const southWest = bounds.getSouthWest();\n      const longitudeDelta = Math.abs(northEast.lng() - southWest.lng());\n      const latitudeDelta = Math.abs(northEast.lat() - southWest.lat());\n      const center = bounds.getCenter();\n      props.onRegionChange?.(\n        {\n          latitude: center.lat(),\n          longitude: center.lng(),\n          latitudeDelta,\n          longitudeDelta,\n        },\n        { isGesture }\n      );\n    }\n  }, [map, props.onRegionChange, isGesture]);\n\n  const _onRegionChangeComplete = useCallback(() => {\n    const bounds = map?.getBounds();\n    if (bounds) {\n      const northEast = bounds.getNorthEast();\n      const southWest = bounds.getSouthWest();\n      const longitudeDelta = Math.abs(northEast.lng() - southWest.lng());\n      const latitudeDelta = Math.abs(northEast.lat() - southWest.lat());\n      const center = bounds.getCenter();\n      props.onRegionChangeComplete?.(\n        {\n          latitude: center.lat(),\n          longitude: center.lng(),\n          latitudeDelta,\n          longitudeDelta,\n        },\n        { isGesture }\n      );\n    }\n    setIsGesture(false);\n  }, [map, props.onRegionChange, isGesture]);\n\n  // Ref handle\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      async getCamera(): Promise<Camera> {\n        const center = map?.getCenter();\n        return {\n          altitude: 0,\n          heading: map?.getHeading() || 0,\n          pitch: map?.getTilt() || 0, // TODO: Review this\n          zoom: map?.getZoom() || 0, // TODO: Normalize value\n          center: {\n            latitude: center?.lat() || 0,\n            longitude: center?.lng() || 0,\n          },\n        };\n      },\n      setCamera(camera: Partial<Camera>): void {\n        map?.moveCamera(transformRNCameraObject(camera));\n      },\n      animateCamera(\n        camera: Partial<Camera>,\n        _opts?: { duration?: number }\n      ): void {\n        map?.moveCamera(transformRNCameraObject(camera));\n      },\n      async getMapBoundaries(): Promise<{\n        northEast: LatLng;\n        southWest: LatLng;\n      }> {\n        const bounds = map?.getBounds();\n\n        const northEast = bounds?.getNorthEast();\n        const southWest = bounds?.getSouthWest();\n\n        return {\n          northEast: {\n            latitude: northEast?.lat() || 0,\n            longitude: northEast?.lng() || 0,\n          },\n          southWest: {\n            latitude: southWest?.lat() || 0,\n            longitude: southWest?.lng() || 0,\n          },\n        };\n      },\n      animateToRegion(region: Region, _duration?: number): void {\n        const bounds = new google.maps.LatLngBounds();\n\n        // Source: https://github.com/react-native-maps/react-native-maps/blob/master/android/src/main/java/com/airbnb/android/react/maps/AirMapView.java#L503\n\n        // southWest\n        bounds.extend({\n          lat: region.latitude - region.latitudeDelta / 2,\n          lng: region.longitude - region.longitudeDelta / 2,\n        });\n\n        // northEast\n        bounds.extend({\n          lat: region.latitude + region.latitudeDelta / 2,\n          lng: region.longitude + region.longitudeDelta / 2,\n        });\n\n        // panToBounds not working??\n        // map?.panToBounds(bounds);\n        map?.fitBounds(bounds);\n      },\n      fitToCoordinates(\n        coordinates?: LatLng[],\n        options?: { edgePadding?: EdgePadding; animated?: boolean }\n      ): void {\n        const bounds = new google.maps.LatLngBounds();\n\n        if (coordinates) {\n          coordinates?.forEach((c) =>\n            bounds.extend({\n              lat: c.latitude,\n              lng: c.longitude,\n            })\n          );\n        }\n\n        map?.fitBounds(bounds, options?.edgePadding as google.maps.Padding);\n      },\n      setMapBoundaries(northEast: LatLng, southWest: LatLng): void {\n        const bounds = new google.maps.LatLngBounds();\n\n        bounds.extend({ lat: northEast.latitude, lng: northEast.longitude });\n        bounds.extend({ lat: southWest.latitude, lng: southWest.longitude });\n\n        map?.fitBounds(bounds);\n      },\n      async pointForCoordinate(coordinate: LatLng): Promise<Point> {\n        const point = map?.getProjection()?.fromLatLngToPoint({\n          lat: coordinate.latitude,\n          lng: coordinate.longitude,\n        });\n        return point || { x: 0, y: 0 };\n      },\n      async coordinateForPoint(point: Point): Promise<LatLng> {\n        const coord = map\n          ?.getProjection()\n          ?.fromPointToLatLng(new google.maps.Point(point.x, point.y));\n\n        return { latitude: coord?.lat() || 0, longitude: coord?.lng() || 0 };\n      },\n      async takeSnapshot(_options?: SnapshotOptions): Promise<string> {\n        logMethodNotImplementedWarning('takeSnapshot');\n        return '';\n      },\n      async addressForCoordinate(_coordinate: LatLng): Promise<Address> {\n        Location.setGoogleApiKey(props.googleMapsApiKey || '');\n        const [address] = await Location.reverseGeocodeAsync(_coordinate, {\n          useGoogleMaps: true,\n        });\n\n        return address\n          ? {\n              administrativeArea: address.region || '',\n              country: address.country || '',\n              countryCode: address.isoCountryCode || '',\n              locality: address.city || '',\n              postalCode: address.postalCode || '',\n              name: address.name || '',\n              subAdministrativeArea: address.subregion || '',\n              subLocality: address.city || '',\n              thoroughfare: '',\n            }\n          : (null as unknown as Address);\n      },\n      animateToNavigation(\n        _location: LatLng,\n        _bearing: number,\n        _angle: number,\n        _duration?: number\n      ): void {\n        logDeprecationWarning('animateToNavigation');\n      },\n      animateToCoordinate(_latLng: LatLng, _duration?: number): void {\n        logDeprecationWarning('animateToCoordinate');\n      },\n      animateToBearing(_bearing: number, _duration?: number): void {\n        logDeprecationWarning('animateToBearing');\n      },\n      animateToViewingAngle(_angle: number, _duration?: number): void {\n        logDeprecationWarning('animateToViewingAngle');\n      },\n      fitToElements(_options?: {\n        edgePadding?: EdgePadding;\n        animated?: boolean;\n      }): void {\n        logMethodNotImplementedWarning('fitToElements');\n      },\n      fitToSuppliedMarkers(\n        _markers: string[],\n        _options?: { edgePadding?: EdgePadding; animated?: boolean }\n      ): void {\n        logMethodNotImplementedWarning('fitToSuppliedMarkers');\n      },\n      setIndoorActiveLevelIndex(_index: number): void {\n        logMethodNotImplementedWarning('setIndoorActiveLevelIndex');\n      },\n    }),\n    [map]\n  );\n\n  // Side effects\n\n  useEffect(() => {\n    if (props.followsUserLocation && userLocation) {\n      map?.panTo({\n        lat: userLocation.coords.latitude,\n        lng: userLocation.coords.longitude,\n      });\n    }\n  }, [props.followsUserLocation, userLocation]);\n\n  const mapNode = useMemo(\n    () => (\n      <GoogleMap\n        onLoad={_onMapReady}\n        onBoundsChanged={_onRegionChange}\n        onDragStart={_onDragStart}\n        onDragEnd={_onRegionChangeComplete}\n        mapContainerStyle={{ flex: 1 }}\n        zoom={props.initialCamera?.zoom || 3}\n        heading={props.initialCamera?.heading}\n        tilt={props.initialCamera?.pitch}\n        onDrag={() => {\n          const center = map?.getCenter();\n\n          props.onPanDrag?.(\n            mapMouseEventToMapEvent(\n              null,\n              center && { latitude: center.lat(), longitude: center.lng() },\n              map,\n              undefined\n            )\n          );\n        }}\n        onClick={(e) =>\n          props.onPress?.(mapMouseEventToMapEvent(e, null, map, 'press'))\n        }\n        onDblClick={(e) =>\n          props.onDoublePress?.(mapMouseEventToMapEvent(e, null, map, 'press'))\n        }\n        center={\n          map\n            ? map.getCenter()\n            : {\n                lat:\n                  props.initialCamera?.center.latitude ||\n                  props.initialRegion?.latitude ||\n                  0,\n                lng:\n                  props.initialCamera?.center.longitude ||\n                  props.initialRegion?.longitude ||\n                  0,\n              }\n        }\n        options={{\n          scrollwheel: props.zoomEnabled,\n          disableDoubleClickZoom: !props.zoomTapEnabled,\n          zoomControl: props.zoomControlEnabled,\n          rotateControl: props.rotateEnabled,\n          minZoom: props.minZoomLevel, // TODO: Normalize value\n          maxZoom: props.maxZoomLevel, // TODO: Normalize value\n          scaleControl: props.showsScale,\n          styles: props.customMapStyle,\n          ...(props.options || {}),\n        }}\n      >\n        {props.showsUserLocation && userLocation && (\n          <UserLocationMarker coordinates={userLocation.coords} />\n        )}\n        {props.children}\n      </GoogleMap>\n    ),\n    [\n      _onRegionChange,\n      _onMapReady,\n      userLocation,\n      props.initialCamera,\n      props.initialRegion,\n      props.showsUserLocation,\n      props.onPanDrag,\n      props.onPress,\n      props.onDoublePress,\n      props.zoomEnabled,\n      props.zoomTapEnabled,\n      props.zoomControlEnabled,\n      props.rotateEnabled,\n      props.minZoomLevel,\n      props.maxZoomLevel,\n      props.showsScale,\n      props.customMapStyle,\n      props.options,\n    ]\n  );\n\n  if (props.provider !== 'google') {\n    console.warn(\n      '[WARNING] `react-native-web-maps` only suppots google for now. Please pass \"google\" as provider in props'\n    );\n\n    return null;\n  }\n\n  return isLoaded ? (\n    React.cloneElement(mapNode)\n  ) : (\n    <>{props.loadingFallback || null}</>\n  );\n}\n\nexport const MapView = memo(forwardRef(_MapView));\n"],"mappings":"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"}