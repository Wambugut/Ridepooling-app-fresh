{"version":3,"names":["_react","_interopRequireWildcard","require","_region","_cluster","_supercluster","_interopRequireDefault","_marker","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_MarkerClusterer","props","supercluster","_setSupercluster","useState","Supercluster","markers","useMemo","React","Children","toArray","children","filter","child","type","Marker","points","map","node","properties","cluster","geometry","coordinates","Number","coordinate","longitude","latitude","clusters","region","bbox","getBoundByRegion","load","getClusters","Math","round","log","longitudeDelta","LN2","createElement","Fragment","feature","idx","_props$renderCluster","clusterProperties","clusterProps","expansionZoom","getClusterExpansionZoom","cluster_id","pointCount","point_count","pointCountAbbreviated","point_count_abbreviated","toString","renderCluster","Cluster","MarkerClusterer","memo","exports"],"sources":["marker-clusterer.tsx"],"sourcesContent":["import type { ClusterProps, MarkerClustererProps } from './types';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo, useState } from 'react';\nimport { getBoundByRegion } from '../../utils/region';\nimport type { MapMarkerProps } from 'react-native-maps';\nimport { Cluster } from './cluster';\nimport Supercluster from 'supercluster';\nimport { Marker } from '../marker';\n\nfunction _MarkerClusterer(props: MarkerClustererProps) {\n  const [supercluster, _setSupercluster] = useState<\n    Supercluster<{ node: JSX.Element; cluster: boolean }>\n  >(new Supercluster());\n\n  const markers = useMemo(\n    () =>\n      (React.Children.toArray(props.children).filter((child) => {\n        return (child as ReactElement).type === Marker;\n      }) as ReactElement<MapMarkerProps>[]) || [],\n    [props.children]\n  );\n\n  const points = useMemo<\n    Supercluster.PointFeature<{ node: JSX.Element; cluster: boolean }>[]\n  >(\n    () =>\n      markers.map((node) => ({\n        type: 'Feature',\n        properties: { cluster: false, node },\n        geometry: {\n          type: 'Point',\n          coordinates: [\n            Number(node.props.coordinate.longitude),\n            Number(node.props.coordinate.latitude),\n          ],\n        },\n      })),\n    [markers]\n  );\n\n  const clusters = useMemo(() => {\n    if (!props.region) return [];\n\n    const bbox = getBoundByRegion(props.region);\n\n    supercluster.load(points);\n\n    return supercluster.getClusters(\n      bbox,\n      Math.round(Math.log(360 / props.region.longitudeDelta) / Math.LN2)\n    );\n  }, [props.region, points]);\n\n  return (\n    <>\n      {clusters.map((feature, idx) => {\n        const clusterProperties =\n          feature.properties as Supercluster.ClusterProperties;\n\n        const clusterProps: ClusterProps = {\n          expansionZoom: supercluster.getClusterExpansionZoom(\n            clusterProperties.cluster_id\n          ),\n          pointCount: clusterProperties.point_count,\n          pointCountAbbreviated: clusterProperties.point_count_abbreviated,\n          coordinate: {\n            longitude: feature.geometry.coordinates[0]!,\n            latitude: feature.geometry.coordinates[1]!,\n          },\n        };\n\n        return (\n          <React.Fragment key={idx.toString()}>\n            {feature.properties.cluster === true\n              ? props.renderCluster?.(clusterProps) || (\n                  <Cluster {...clusterProps} />\n                )\n              : feature.properties.node}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n\nexport const MarkerClusterer = memo(_MarkerClusterer);\n"],"mappings":"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"}