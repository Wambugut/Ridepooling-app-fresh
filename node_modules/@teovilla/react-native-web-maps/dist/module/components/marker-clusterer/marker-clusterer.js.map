{"version":3,"names":["React","memo","useMemo","useState","getBoundByRegion","Cluster","Supercluster","Marker","_MarkerClusterer","props","supercluster","_setSupercluster","markers","Children","toArray","children","filter","child","type","points","map","node","properties","cluster","geometry","coordinates","Number","coordinate","longitude","latitude","clusters","region","bbox","load","getClusters","Math","round","log","longitudeDelta","LN2","createElement","Fragment","feature","idx","_props$renderCluster","clusterProperties","clusterProps","expansionZoom","getClusterExpansionZoom","cluster_id","pointCount","point_count","pointCountAbbreviated","point_count_abbreviated","key","toString","renderCluster","call","MarkerClusterer"],"sources":["marker-clusterer.tsx"],"sourcesContent":["import type { ClusterProps, MarkerClustererProps } from './types';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo, useState } from 'react';\nimport { getBoundByRegion } from '../../utils/region';\nimport type { MapMarkerProps } from 'react-native-maps';\nimport { Cluster } from './cluster';\nimport Supercluster from 'supercluster';\nimport { Marker } from '../marker';\n\nfunction _MarkerClusterer(props: MarkerClustererProps) {\n  const [supercluster, _setSupercluster] = useState<\n    Supercluster<{ node: JSX.Element; cluster: boolean }>\n  >(new Supercluster());\n\n  const markers = useMemo(\n    () =>\n      (React.Children.toArray(props.children).filter((child) => {\n        return (child as ReactElement).type === Marker;\n      }) as ReactElement<MapMarkerProps>[]) || [],\n    [props.children]\n  );\n\n  const points = useMemo<\n    Supercluster.PointFeature<{ node: JSX.Element; cluster: boolean }>[]\n  >(\n    () =>\n      markers.map((node) => ({\n        type: 'Feature',\n        properties: { cluster: false, node },\n        geometry: {\n          type: 'Point',\n          coordinates: [\n            Number(node.props.coordinate.longitude),\n            Number(node.props.coordinate.latitude),\n          ],\n        },\n      })),\n    [markers]\n  );\n\n  const clusters = useMemo(() => {\n    if (!props.region) return [];\n\n    const bbox = getBoundByRegion(props.region);\n\n    supercluster.load(points);\n\n    return supercluster.getClusters(\n      bbox,\n      Math.round(Math.log(360 / props.region.longitudeDelta) / Math.LN2)\n    );\n  }, [props.region, points]);\n\n  return (\n    <>\n      {clusters.map((feature, idx) => {\n        const clusterProperties =\n          feature.properties as Supercluster.ClusterProperties;\n\n        const clusterProps: ClusterProps = {\n          expansionZoom: supercluster.getClusterExpansionZoom(\n            clusterProperties.cluster_id\n          ),\n          pointCount: clusterProperties.point_count,\n          pointCountAbbreviated: clusterProperties.point_count_abbreviated,\n          coordinate: {\n            longitude: feature.geometry.coordinates[0]!,\n            latitude: feature.geometry.coordinates[1]!,\n          },\n        };\n\n        return (\n          <React.Fragment key={idx.toString()}>\n            {feature.properties.cluster === true\n              ? props.renderCluster?.(clusterProps) || (\n                  <Cluster {...clusterProps} />\n                )\n              : feature.properties.node}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n\nexport const MarkerClusterer = memo(_MarkerClusterer);\n"],"mappings":"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"}