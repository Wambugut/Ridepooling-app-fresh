{"version":3,"names":["makeOverlays","features","points","filter","f","geometry","type","map","feature","makeCoordinates","coordinates","makeOverlay","reduce","flatten","overlay","lines","multipolygons","polygons","concat","prev","curr","length","holes","slice","makePoint","c","latitude","longitude","makeLine","l","g","p","doesOverlayContainProperty","property","properties","getRgbaFromHex","hex","_hex$match","alpha","arguments","undefined","r","b","match","x","parseInt","getColor","props","colorType","overrideColorProp","hasOwnProperty","color","opacityProperty","getStrokeWidth","strokeWidth"],"sources":["geojson.ts"],"sourcesContent":["/**\n * This file is taken from `react-native-maps`\n * I guess this has been tested by the creators lol\n * Tried to type it but it's a pain\n * TODO: Type this bs\n * https://github.com/react-native-maps/react-native-maps/blob/master/src/Geojson.js\n */\n\nexport const makeOverlays = (features: GeoJSON.Feature[]) => {\n  const points = features\n    .filter(\n      (f) =>\n        f.geometry &&\n        (f.geometry.type === 'Point' || f.geometry.type === 'MultiPoint')\n    )\n    .map((feature) =>\n      makeCoordinates(feature).map((coordinates) =>\n        makeOverlay(coordinates as any, feature)\n      )\n    )\n    .reduce(flatten as any, [])\n    .map((overlay) => ({ ...overlay, type: 'point' }));\n\n  const lines = features\n    .filter(\n      (f) =>\n        f.geometry &&\n        (f.geometry.type === 'LineString' ||\n          f.geometry.type === 'MultiLineString')\n    )\n    .map((feature) =>\n      makeCoordinates(feature).map((coordinates) =>\n        makeOverlay(coordinates as any, feature)\n      )\n    )\n    .reduce(flatten as any, [])\n    .map((overlay) => ({ ...overlay, type: 'polyline' }));\n\n  const multipolygons = features\n    .filter((f) => f.geometry && f.geometry.type === 'MultiPolygon')\n    .map((feature) =>\n      makeCoordinates(feature).map((coordinates) =>\n        makeOverlay(coordinates as any, feature)\n      )\n    )\n    .reduce(flatten as any, []);\n\n  const polygons = features\n    .filter((f) => f.geometry && f.geometry.type === 'Polygon')\n    .map((feature) => makeOverlay(makeCoordinates(feature) as any, feature))\n    .reduce(flatten as any, [])\n    .concat(multipolygons as any)\n    .map((overlay) => ({ ...(overlay as any), type: 'polygon' }));\n\n  return points.concat(lines).concat(polygons);\n};\n\nexport const flatten = <T extends []>(prev: T, curr: T) => prev.concat(curr);\n\nexport const makeOverlay = (\n  coordinates: GeoJSON.Position,\n  feature: GeoJSON.Feature\n) => {\n  let overlay: {\n    feature: GeoJSON.Feature;\n    coordinates: number | undefined | GeoJSON.Position;\n    holes: any;\n  } = {\n    feature,\n  } as any;\n  if (\n    feature.geometry.type === 'Polygon' ||\n    feature.geometry.type === 'MultiPolygon'\n  ) {\n    overlay.coordinates = coordinates[0];\n    if (coordinates.length > 1) {\n      overlay.holes = coordinates.slice(1);\n    }\n  } else {\n    overlay.coordinates = coordinates;\n  }\n  return overlay;\n};\n\nexport const makePoint = (c: GeoJSON.Position) => ({\n  latitude: c[1],\n  longitude: c[0],\n});\n\nexport const makeLine = (l: GeoJSON.Position[]) => l.map(makePoint);\n\nexport const makeCoordinates = (feature: GeoJSON.Feature) => {\n  const g = feature.geometry;\n  if (g.type === 'Point') {\n    return [makePoint(g.coordinates)];\n  } else if (g.type === 'MultiPoint') {\n    return g.coordinates.map(makePoint);\n  } else if (g.type === 'LineString') {\n    return [makeLine(g.coordinates)];\n  } else if (g.type === 'MultiLineString') {\n    return g.coordinates.map(makeLine);\n  } else if (g.type === 'Polygon') {\n    return g.coordinates.map(makeLine);\n  } else if (g.type === 'MultiPolygon') {\n    return g.coordinates.map((p) => p.map(makeLine));\n  } else {\n    return [];\n  }\n};\n\nexport const doesOverlayContainProperty = (overlay: any, property: any) => {\n  // Geojson may have 0 for the opacity when intention is to not specify the\n  // opacity. Therefore, we evaluate the truthiness of the propery where 0\n  // would return false.\n  return (\n    overlay.feature &&\n    overlay.feature.properties &&\n    overlay.feature.properties[property]\n  );\n};\n\nexport const getRgbaFromHex = (hex: string, alpha = 1) => {\n  const [r, g, b] = hex.match(/\\w\\w/g)?.map((x) => parseInt(x, 16)) || [\n    0, 0, 0,\n  ];\n  return `rgba(${r},${g},${b},${alpha})`;\n};\n\nexport const getColor = (\n  props: any,\n  overlay: any,\n  colorType: any,\n  overrideColorProp: any\n) => {\n  if (props.hasOwnProperty(overrideColorProp)) {\n    return props[overrideColorProp];\n  }\n  if (doesOverlayContainProperty(overlay, colorType)) {\n    let color = overlay.feature.properties[colorType];\n    const opacityProperty = colorType + '-opacity';\n    if (\n      doesOverlayContainProperty(overlay, opacityProperty) &&\n      color[0] === '#'\n    ) {\n      color = getRgbaFromHex(\n        color,\n        overlay.feature.properties[opacityProperty]\n      );\n    }\n    return color;\n  }\n  return;\n};\n\nexport const getStrokeWidth = (props: any, overlay: any) => {\n  if (props.hasOwnProperty('strokeWidth')) {\n    return props.strokeWidth;\n  }\n  if (doesOverlayContainProperty(overlay, 'stroke-width')) {\n    return overlay.feature.properties['stroke-width'];\n  }\n  return;\n};\n"],"mappings":"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"}